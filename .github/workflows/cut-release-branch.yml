# **what?**
#


# **why?**
#

# **when?**
#

# Note: This should be moved into the actions repos so it can be used in all adapters as well

name: Cut new release branch

on:
  workflow_dispatch:
    inputs:
      main_branch_name:
       description: 'The name of the main branch (ex. main)'
       default: main
       required: true
      new_branch_name:
       description: 'The full name of the new branch (ex. 1.5.latest)'
       required: true
      version_to_bump_main:
       description: 'The alpha version main should bump to (ex. 1.6.0a1)'
       required: true
      version_to_bump_release:
       description: 'The rc version main should bump to (ex. 1.5.0rc1)'
       required: true

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  prep_work:
    runs-on: ubuntu-latest
    steps:
      - name: Audit Version and Parse Into Parts
        id: semver_release
        uses: dbt-labs/actions/parse-semver@v1
        with:
          version: ${{ inputs.version_to_bump_release }}

      - name: Audit Version and Parse Into Parts
        id: semver_main
        uses: dbt-labs/actions/parse-semver@v1
        with:
          version: ${{ inputs.version_to_bump_main }}

      # - name: Audit New branch

  cut_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Set branch value
        id: variables
        run: |
          echo "::set-output name=BRANCH_NAME::release_workflow/${{ version_to_bump_release }}_version_bump"

      - name: Cut Release Branch
        run: |
          git checkout -b ${{ inputs.new_branch_name }}
          git push origin ${{ inputs.new_branch_name }}
          git branch --set-upstream-to=origin/${{ inputs.new_branch_name }} ${{ inputs.new_branch_name }}

      - name: Create PR branch
        run: |
          git checkout -b ${{ steps.variables.output.BRANCH_NAME }}
          git push origin ${{ steps.variables.output.BRANCH_NAME }}
          git branch --set-upstream-to=origin/${{ steps.variables.output.BRANCH_NAME }} ${{ steps.variables.output.BRANCH_NAME }}

      - name: Bump version
        run: |
          source env/bin/activate
          pip install -r dev-requirements.txt
          env/bin/bumpversion --allow-dirty --new-version ${{ inputs.version_to_bump_release }} major
          git status

      - name: Commit version bump to branch
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'Github Build Bot'
          author_email: 'buildbot@fishtownanalytics.com'
          message: 'Bumping version to ${{ inputs.version_to_bump_release }}'
          branch: '${{ steps.variables.output.BRANCH_NAME }}'
          push: 'origin origin/${{ steps.variables.output.BRANCH_NAME }}'

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          author: 'Github Build Bot <buildbot@fishtownanalytics.com>'
          base: ${{ inputs.new_branch_name }}
          title: 'Cut release branch and bump version to ${{ inputs.version_to_bump_release }}'
          branch: '${{ steps.variables.output.BRANCH_NAME }}'
          labels: |
            Skip Changelog

  cleanup_main:
    runs-on: ubuntu-latest
    steps:
      - remove_changelogs
      - version bump to alpha
      - open PR with changes
            # - name: Audit New branch
      # - name: Audit New version
      - name: Set branch value
        id: variables
        run: |
          echo "::set-output name=BRANCH_NAME::release_workflow/${{ version_to_bump_main }}_version_bump"

      - name: Create PR branch
        run: |
          git checkout -b ${{ steps.variables.output.BRANCH_NAME }}
          git push origin ${{ steps.variables.output.BRANCH_NAME }}
          git branch --set-upstream-to=origin/${{ steps.variables.output.BRANCH_NAME }} ${{ steps.variables.output.BRANCH_NAME }}

      - name: Bump version
        run: |
          source env/bin/activate
          pip install -r dev-requirements.txt
          env/bin/bumpversion --allow-dirty --new-version ${{ inputs.version_to_bump_main }} major
          git status

      - name: Commit version bump to branch
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'Github Build Bot'
          author_email: 'buildbot@fishtownanalytics.com'
          message: 'Bumping version to ${{ inputs.version_to_bump_main }}'
          branch: '${{ steps.variables.output.BRANCH_NAME }}'
          push: 'origin origin/${{ steps.variables.output.BRANCH_NAME }}'

      - name: Install Homebrew packages
        run: |
          brew install pre-commit
          brew tap miniscruff/changie https://github.com/miniscruff/changie
          brew install changie

      - name: Cleanup changelog
        run: |
          if [[ ${{ steps.semver.outputs.is-pre-release }} -eq 1 ]]
          then
            changie batch ${{ steps.semver.outputs.base-version }}  --move-dir '${{ steps.semver.outputs.base-version }}' --prerelease '${{ steps.semver.outputs.pre-release }}'
          else
            changie batch ${{ steps.semver.outputs.base-version }}  --include '${{ steps.semver.outputs.base-version }}' --remove-prereleases
          fi
          changie merge
          git status

      - name: Commit changelog cleanup to branch
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'Github Build Bot'
          author_email: 'buildbot@fishtownanalytics.com'
          message: 'Bumping version to ${{ inputs.version_to_bump_main }}'
          branch: '${{ steps.variables.output.BRANCH_NAME }}'
          push: 'origin origin/${{ steps.variables.output.BRANCH_NAME }}'

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          author: 'Github Build Bot <buildbot@fishtownanalytics.com>'
          base: ${{github.ref}}
          title: 'Clean up changelogs and bump to version ${{ inputs.version_to_bump_main }}'
          branch: '${{ steps.variables.output.BRANCH_NAME }}'
          labels: |
            Skip Changelog
